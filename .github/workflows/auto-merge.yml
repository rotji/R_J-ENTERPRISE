name: Auto Merge Any Branch to Main

on:
  push:
    branches-ignore:
      - main  # Prevent triggering when pushing directly to main

jobs:
  merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures full history is fetched for all branches

      - name: Set up Git identity
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Get current branch name
        id: get_branch
        run: echo "branch_name=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

      - name: Fetch all branches
        run: git fetch --all  # Fetch every remote branch

      - name: Check if branch exists remotely
        id: check_branch
        run: |
          BRANCH_NAME=${{ steps.get_branch.outputs.branch_name }}
          if git show-ref --verify --quiet refs/remotes/origin/$BRANCH_NAME; then
            echo "branch_exists=true" >> $GITHUB_OUTPUT
          else
            echo "branch_exists=false" >> $GITHUB_OUTPUT

      - name: Merge current branch into main
        if: steps.check_branch.outputs.branch_exists == 'true'
        run: |
          BRANCH_NAME=${{ steps.get_branch.outputs.branch_name }}
          echo "Merging $BRANCH_NAME into main..."
          git checkout main
          git merge origin/$BRANCH_NAME --allow-unrelated-histories -m "Auto-merged $BRANCH_NAME into main"
          git push origin main

      - name: Skip merge if branch does not exist
        if: steps.check_branch.outputs.branch_exists == 'false'
        run: echo "Branch does not exist on remote. Skipping merge."
